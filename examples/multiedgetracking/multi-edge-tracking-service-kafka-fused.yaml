apiVersion: sedna.io/v1alpha1
kind: MultiEdgeTrackingService
metadata:
  name: container-tracking
spec:
  motDeploy:
    model:
      name: "detection-toys-yolov5s"
    kafkaSupport: true
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: object-detection
      template:
        metadata:
          labels:
            app: object-detection
        spec:
          nodeName: "fraprigel00001"
          containers:
            - image: registry-cbu.huawei.com/kubeedge/sedna-example-multi-edge-tracking-detection:v0.3.0
              imagePullPolicy: Always
              name:  detection
              env:  # user defined environments
              - name: input_shape
                value: "640"
              - name: "video_url"
                value: "rtsp://172.17.0.1/video/0"
              - name: "stream_dispatcher_url"
                value: "http://7.182.9.110:8478/get_rtsp_stream" # we should have a k8s deploy+service+pod for this later
              resources:  # user defined resources
                requests:
                  memory: 64M
                  cpu: 500m
                limits:
                  memory: 2Gi

  reIDDeploy:
    kafkaSupport: true
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: reid
      template:
        metadata:
          labels:
            app: reid
        spec:
          nodeName: "fraporion00001"
          containers:
            - image: registry-cbu.huawei.com/kubeedge/sedna-example-multi-edge-tracking-feature-extraction-reid:latest
              name:  reid
              imagePullPolicy: Always
              ports:
                - containerPort: 6000
                  hostPort: 6000
              env:  # user defined environments
              - name: use_gallery
                value: "True"
              - name: input_shape
                value: "256,128"
              - name: "log_dir"
                value: "/data/ai_models/deep_eff_reid/loggers/runs/"
              - name: "img_dir"
                value: "/data/ai_models/deep_eff_reid/"
              - name: "gfeats"
                value: "gfeats.pth"
              - name: "qfeats"
                value: "qfeats.pth"
              - name: "imgpath"
                value: "imgpath.npy"
              - name: "dataset"
                value: "efficientnetv2_containers2021_toy"
              resources:  # user defined resources
                requests:
                  memory: 2Gi
                  cpu: 500m
              volumeMounts:
              - name: outputdir
                mountPath: /data/
          volumes:   # user defined volumes
            - name: outputdir
              hostPath:
                # user must create the directory in host
                path: /data/
                type: Directory